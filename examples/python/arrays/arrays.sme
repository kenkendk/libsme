proc fillRead(in inbus)
    exposed bus arr_out {
        val: i32;
        valid: bool;
    };
    const STORE: u1 = 0;
    const LOAD: u1 = 1;
    //enum state {STORE, LOAD};
    var arr: [10]i32;
    //var n: i32;

    var val: int;
{
    // TODO: This should fail in the type checker
    //n[3] = 4;
    if (inbus.valid) {
        switch inbus.mode {
            case STORE {
                val = inbus.val * 2;
                arr[inbus.pos] = val;
                trace("Stored {} to position {}", val, inbus.pos);
                arr_out.valid = false;
            }
            case LOAD {
                arr_out.val = arr[inbus.pos];
                arr_out.valid = true;
            }
            default {
                arr_out.valid = false;
            }
        }
    } else {
        arr_out.valid = false;
    }
}

network arrays_net() {
    exposed bus control {
        valid: bool;
        mode: u1;
        pos: u4;
        val: i32;
    };

    instance fillRead of fillRead(control);
}
