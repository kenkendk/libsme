proc collector (in image_input)
    exposed bus bin_count_out {
        valid: bool;

        low: u32;
        med: u32;
        high: u32;
    };

    // TODO: Test with thresholds given as parameters
    const thresh_high: uint = 200;
    const thresh_med: uint = 100;

    var countlow: u32 = 0;
    var countmed: u32 = 0;
    var counthigh: u32 = 0;

    var color: u32;
{
    if (image_input.valid) {
        color = ((image_input.R * 299) +
            (image_input.G * 587) +
            (image_input.B * 114)) / 1000;

        if (color > thresh_high) {
            counthigh = counthigh + 1;
        } elif (color > thresh_med) {
            countmed = countmed + 1;
        } else {
            countlow = countlow + 1;
        }
    }

    bin_count_out.low = countlow;
    bin_count_out.med = countmed;
    bin_count_out.high = counthigh;
    bin_count_out.valid = image_input.valid && image_input.last_pixel;

}

network coll_net() {
    exposed bus image_input {
        valid: bool;
        last_pixel: bool;

        R: u8;
        G: u8;
        B: u8;
    };

    instance _ of collector(image_input);
}
